class Solution {
    Map<Character,String>mp = new HashMap<>();
    void solve(int i,String digits,StringBuilder temp,List<String> ans){
        if(i == digits.length()){
            String str = temp.toString();
            if(!temp.isEmpty())
            ans.add(str);
            return;
        }
        String mapStr = mp.get(digits.charAt(i));
        for(int j = 0; j< mapStr.length();j++){
            temp.append(mapStr.charAt(j));
            solve(i+1,digits,temp,ans);
            temp.deleteCharAt(i);
        }
    }
    public List<String> letterCombinations(String digits) {
        
        mp.put('2',"abc");
        mp.put('3',"def");
        mp.put('4',"ghi");
        mp.put('5',"jkl");
        mp.put('6',"mno");
        mp.put('7',"pqrs");
        mp.put('8',"tuv");
        mp.put('9',"wxyz");
        List<String> ans = new ArrayList<>();
        StringBuilder temp = new StringBuilder();
        solve(0,digits,temp,ans);
        return ans;
    }
}
